<?xml version="1.0" encoding="UTF-8"?>

<!-- ==== mapper 기본설정 ==== -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- ==== 루트 엘리먼트 & 네임스페이스 설정(프로젝트 전체내에서 유일해야 한다.) ==== -->
<mapper namespace="chw">
	
	<!--=============== Member 시작 ============-->
	
	<select id="idExistCheck" parameterType="String" resultType="Integer">
		select count(userid) from tbl_member_login
		where userid = #{userid}
	</select>
	
	<select id="nicknameExistCheck" parameterType="String" resultType="Integer">
		select count(nickname) from tbl_member
		where nickname = #{nickname}
	</select>
	
	<select id="emailExistCheck" parameterType="String" resultType="Integer">
		select count(email) from tbl_member
		where email = #{email}
	</select>
	
	<insert id="insert_member_login" parameterType="com.gukmo.board.model.MemberVO">
		insert into tbl_member_login(userid, passwd)
		values(#{userid}, #{passwd})
	</insert>
	
	<insert id="insert_member" parameterType="com.gukmo.board.model.MemberVO">
		insert into tbl_member(fk_userid, email, email_acept, nickname)
		values(#{userid}, #{email}, #{email_acept}, #{nickname})
	</insert>
	
	
	
	<!--=============== Member 끝 ============-->
	
	
	
	<!--=============== Login 시작 ============-->
	
	<select id="userExistCheck" parameterType="HashMap" resultType="Integer">
		select count(userid) from tbl_member_login
		where userid = #{userid} and passwd = #{passwd}
	</select>
	
	<select id="adminExistCheck" parameterType="HashMap" resultType="Integer">
		select count(admin_id) from tbl_admin_login
		where admin_id = #{userid} and passwd = #{passwd}
	</select>
	
	
	<select id="statusCheck" parameterType="String" resultType="com.gukmo.board.model.MemberVO">
		select * from tbl_member_login
		where userid = #{userid}
	</select>
	
	
	<select id="getLastLoginday" parameterType="String" resultType="Integer">
		select T.*
		from
		(
		select rownum R ,V.*
		from
			(
			select trunc(sysdate-login_date) LastLoginday
			from tbl_login_record
			where fk_userid = #{userid}
			order by LastLoginday desc
			) V
		) T
		where R = 1
	</select>
	
	<update id="editUserStatus_rest" parameterType="String">
		update tbl_member_login set status='휴면' where userid = #{userid}
	</update>
	
	
	<select id="getLastUpdateDay" parameterType="String" resultType="Integer">
		select trunc(sysdate-update_passwd_date)
		from tbl_member_login
		where userid = #{userid}
	</select>
	
	<select id="getUser" parameterType="String" resultType="com.gukmo.board.model.MemberVO">
		select V.userid,
		       nvl(V.email,C.email) email,
		       nvl(V.email_acept,C.email_acept) email_acept,
		       nvl(V.nickname,C.nickname) nickname,
		       nvl(V.point,C.point) point,
		       nvl(V.join_date,C.join_date) join_date,
		       nvl(V.profile_image,C.profile_image) profile_image,
		       C.academy_name,
		       C.company_num,
		       C.homepage,
		       C.phone
		from
			(
			select A.userid,email,email_acept,nickname,point,join_date,profile_image
			from
				(
				select userid from tbl_member_login 
				where userid = #{userid} 
				)A
				left join
				tbl_member B
				on A.userid = B.fk_userid
			) V
			left join
			tbl_academy_member C
		on V.userid = C.fk_userid
	</select>
	
	<insert id="loginRecordSave" parameterType="HashMap">
		insert into tbl_login_record(login_num, fk_userid, login_ip)
		values(seq_login_record.nextval, #{userid}, #{client_ip})
	</insert>
	
	<insert id="adminloginRecordSave" parameterType="HashMap">
		insert into tbl_admin_login_record(admin_login_num, fk_admin_id, login_ip)
		values(seq_admin_login_record.nextval, #{userid}, #{client_ip})
	</insert>
	
	
	
	
	<!--=============== Login 끝 ============-->



	
	<!--=============== Board 시작 ============-->
	
	
	
	
	<!--=============== Board 끝 ============-->
	
	
	
</mapper>