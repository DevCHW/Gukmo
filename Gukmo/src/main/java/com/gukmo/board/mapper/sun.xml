<?xml version="1.0" encoding="UTF-8"?>

<!-- ==== mapper 기본설정 ==== -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- ==== 루트 엘리먼트 & 네임스페이스 설정(프로젝트 전체내에서 유일해야 한다.) ==== -->
<mapper namespace="sun">

	<!--=============== Board 시작 ============-->
	
	<!-- BoardList를 보여주기 위한 BoardVO 매핑 -->
	<resultMap id="boardList" type="com.gukmo.board.model.BoardVO">
		<id property="board_num" column="board_num"/><!-- property는 VO필드이름, column은 오라클 컬럼명 -->
		<result property="nickname" column="nickname" />
		<result property="category" column="category" />
		<result property="detail_category" column="detail_category" />
		<result property="subject" column="subject" />
		<result property="content" column="content" />
		<result property="write_date" column="write_date" />
		<result property="views" column="views" />
		<result property="profile_image" column="profile_image" />
		<result property="comment_cnt" column="comment_cnt" />
		<result property="like_cnt" column="like_cnt" />
		<result property="writer_point" column="writer_point" />
		<collection property="hashtags" column="hashtag_num" javaType="java.util.ArrayList" ofType="com.gukmo.board.model.HashtagVO">
			<id property="hashtag_num" column="hashtag_num"/>
			<result property="hashtag" column="hashtag"/>
			<result property="fk_board_num" column="fk_board_num"/>
		</collection>
	</resultMap>
	
	
	<!-- 게시판 리스트 얻기 -->
	<select id="boardList" parameterType="HashMap" resultMap="boardList">
		select rno, board_num, b.nickname, category, detail_category, subject, content, write_date, views, profile_image, comment_cnt, like_cnt, point as writer_point
			   ,hashtag_num, hashtag
		from 
		(
		    select rno, board_num, nickname, category, detail_category, subject, content, write_date, views, profile_image, comment_cnt, like_cnt
		    ,hashtag_num, hashtag
		    from 
		    (
		        select rownum rno, board_num, nickname, category, detail_category, subject, content, write_date, views, profile_image, comment_cnt, like_cnt
		        	   ,B.hashtag_num,B.fk_board_num,B.hashtag
		        from 
		        (	
		            select board_num, nickname, category, detail_category
		                  , subject, content, write_date
		                  , views, profile_image, comment_cnt, like_cnt
		            from tbl_board
		            where 1=1 
		            and category = '커뮤니티' and detail_category = #{detail_category}
		            <if test='searchWord != "" '>
		            and (subject like '%'||lower(#{searchWord})||'%'
		            or content like '%'||lower(#{searchWord})||'%')
			    	</if>
		            order by write_date desc
		        )v left join tbl_hashtag B
    			on v.board_num = B.fk_board_num
		    )
		 where rno between #{startRno} and #{endRno}
		) b left join (select nickname, point from tbl_member) m on b.nickname = m.nickname
		order by #{sortType} desc
	</select>
	
	
	<insert id="communityNew" parameterType="com.gukmo.board.model.BoardVO">
		insert into tbl_board
		values(seq_board.nextval, #{nickname}, '커뮤니티', #{detail_category}, #{subject}, #{content}, default, default, #{profile_image},default,default)
	</insert>
	
	
	<update id="pointPlus" parameterType="HashMap">
	    update tbl_member set point = point + to_number(#{point})
	    where nickname = #{boardvo.nickname}
	</update>
	
	
	<insert id="activityLog" parameterType="HashMap">
		insert into tbl_activity (activity_num, fk_userid, fk_board_num, activity_date, subject, detail_category, division, nickname)
		values(seq_activity.nextval, #{fk_userid}, #{board_num}, default, #{boardvo.subject}, #{boardvo.detail_category}, #{division}, #{boardvo.nickname})
	</insert>
	
	
	<select id="getCurrentBoardnum" parameterType="String" resultType="Integer">
		select max(board_num)
		from tbl_board
		where nickname = #{nickname}
	</select>
	
	
	<select id="getTotalCount" parameterType="HashMap" resultType="Integer">
		select count(*)
		from tbl_board
		where detail_category = #{detail_category}
        <if test='searchWord != "" '>
        and (subject like '%'||lower(#{searchWord})||'%'
        or content like '%'||lower(#{searchWord})||'%')
   		</if>
	</select>
	
	
</mapper>